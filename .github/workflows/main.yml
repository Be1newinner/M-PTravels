# .github/workflows/deploy.yml
name: Deploy to Lightsail (info@shipsar.in)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LIGHTSHELL_SSH_KEY }}" > ~/.ssh/lightshell_key
          chmod 600 ~/.ssh/lightshell_key

      - name: SSH into Lightsail and deploy
        run: |
          ssh -O StrictHostKeyChecking=no ubuntu@3.111.126.28 -i ~/.ssh/lightshell_key << 'EOF'
            set -e  # Exit immediately on error
            cd /home/ubuntu/projects/M-PTravels

            # Ensure we have the latest code
            git fetch origin main
            if ! git diff --quiet HEAD origin/main; then
              git reset --hard origin/main
              git pull origin main
            else
              echo "No changes detected."
            fi

            cd backend
            # Ensure Node.js and bun are installed on the server (if not installed)
            whoami
            if ! command -v bun &> /dev/null
            then
                echo "bun not found, installing..."
                sudo apt update
                curl -fsSL https://bun.sh/install | bash
            fi

            # Ensure dependencies are installed
            bun install --production

            # Add bun's bin directory to PATH to ensure pm2 is accessible
            export PATH=$PATH:/home/ubuntu/.bun/bin
            source ~/.bashrc
            
            if ! command -v pm2 &> /dev/null                                      
            then
                echo "pm2 not found, installing pm2..."
                bun add pm2
            fi

            # Restart PM2 process safely
            if pm2 describe mp-backend > /dev/null; then
              pm2 restart mp-backend
            else
              pm2 start npm --name mp-backend -- run start
            fi
          EOF
